name: Build & Release Tauri App

on:
  push:
    tags:
      - 'v*'      # 只有打tag才触发构建发布

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [  ubuntu-latest, macos-latest,archlinux-latest ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy


      - name: Install pnpm
        run: corepack enable && corepack prepare pnpm@10.12.1  --activate

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10

      - name: Install dependencies
        run: pnpm install


      - name: Install Ubuntu  build dependencies source list
        if: runner.os == 'Linux'
        run: |
          echo "deb http://archive.ubuntu.com/ubuntu jammy main universe" > /etc/apt/sources.list.d/ubuntu22.list
          sudo apt update
          

      - name: Install Archlinux build dependencies
        if: runner.os == 'Linux'
        run: |
          sudo add-apt-repository universe
          sudo add-apt-repository restricted
          sudo add-apt-repository multiverse
          sudo apt update
          sudo apt install libwebkit2gtk-4.0-dev 
          sudo apt install  build-essential 
          sudo apt install curl wget file 
          sudo apt install libssl-dev libgtk-3-dev 
          sudo apt install libayatana-appindicator3-dev  librsvg2-dev
          sudo apt install libwebkit2gtk-4.1-dev libsoup3.0-dev

     

      - name: Build Tauri app
        run: pnpm tb   # 即 tauri build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: tauri-build-${{ matrix.os }}
          path: |
            src-tauri/target/release/bundle/**/*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./release-artifacts

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: Release ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release-artifacts
          asset_name: tauri-build-${{ matrix.os }}.zip
          asset_content_type: application/zip
